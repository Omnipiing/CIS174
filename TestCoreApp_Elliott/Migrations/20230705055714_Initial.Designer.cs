// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCoreApp_Elliott.Models.OlympicGames;

#nullable disable

namespace TestCoreApp_Elliott.Migrations
{
    [DbContext(typeof(OlympicsContext))]
    [Migration("20230705055714_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestCoreApp_Elliott.Models.OlympicGames.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "in",
                            Name = "Indoor"
                        },
                        new
                        {
                            CategoryId = "out",
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("TestCoreApp_Elliott.Models.OlympicGames.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FlagImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GameId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "aut",
                            CategoryId = "out",
                            FlagImage = "AUT.PNG",
                            GameId = "para",
                            Name = "Austria"
                        },
                        new
                        {
                            CountryID = "bra",
                            CategoryId = "out",
                            FlagImage = "BRA.PNG",
                            GameId = "summer",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryID = "can",
                            CategoryId = "in",
                            FlagImage = "CAN.PNG",
                            GameId = "winter",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryID = "chn",
                            CategoryId = "in",
                            FlagImage = "CHN.PNG",
                            GameId = "summer",
                            Name = "China"
                        },
                        new
                        {
                            CountryID = "cyp",
                            CategoryId = "in",
                            FlagImage = "CYP.PNG",
                            GameId = "youth",
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryID = "fin",
                            CategoryId = "out",
                            FlagImage = "FIN.PNG",
                            GameId = "youth",
                            Name = "Finland"
                        },
                        new
                        {
                            CountryID = "fra",
                            CategoryId = "in",
                            FlagImage = "FRA.PNG",
                            GameId = "youth",
                            Name = "France"
                        },
                        new
                        {
                            CountryID = "deu",
                            CategoryId = "in",
                            FlagImage = "DEU.PNG",
                            GameId = "summer",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryID = "gbr",
                            CategoryId = "in",
                            FlagImage = "GBR.PNG",
                            GameId = "winter",
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryID = "ita",
                            CategoryId = "out",
                            FlagImage = "ITA.PNG",
                            GameId = "winter",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryID = "jam",
                            CategoryId = "out",
                            FlagImage = "JAM.PNG",
                            GameId = "winter",
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryID = "jpn",
                            CategoryId = "out",
                            FlagImage = "JAP.PNG",
                            GameId = "winter",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryID = "mex",
                            CategoryId = "in",
                            FlagImage = "MEX.PNG",
                            GameId = "summer",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryID = "nld",
                            CategoryId = "out",
                            FlagImage = "NLD.PNG",
                            GameId = "summer",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryID = "pak",
                            CategoryId = "out",
                            FlagImage = "PAK.PNG",
                            GameId = "para",
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryID = "prt",
                            CategoryId = "out",
                            FlagImage = "PRT.PNG",
                            GameId = "youth",
                            Name = "Portugal"
                        },
                        new
                        {
                            CountryID = "rus",
                            CategoryId = "in",
                            FlagImage = "RUS.PNG",
                            GameId = "youth",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryID = "svk",
                            CategoryId = "out",
                            FlagImage = "SVK.PNG",
                            GameId = "youth",
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryID = "swe",
                            CategoryId = "in",
                            FlagImage = "SWE.PNG",
                            GameId = "winter",
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryID = "tha",
                            CategoryId = "in",
                            FlagImage = "THA.PNG",
                            GameId = "para",
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryID = "ukr",
                            CategoryId = "in",
                            FlagImage = "UKR.PNG",
                            GameId = "para",
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryID = "ury",
                            CategoryId = "in",
                            FlagImage = "URY.PNG",
                            GameId = "para",
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryId = "out",
                            FlagImage = "USA.PNG",
                            GameId = "summer",
                            Name = "United States"
                        },
                        new
                        {
                            CountryID = "zwe",
                            CategoryId = "out",
                            FlagImage = "ZWE.PNG",
                            GameId = "para",
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("TestCoreApp_Elliott.Models.OlympicGames.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = "summer",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameId = "winter",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameId = "para",
                            Name = "Paralympic"
                        },
                        new
                        {
                            GameId = "youth",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("TestCoreApp_Elliott.Models.OlympicGames.Country", b =>
                {
                    b.HasOne("TestCoreApp_Elliott.Models.OlympicGames.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCoreApp_Elliott.Models.OlympicGames.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
